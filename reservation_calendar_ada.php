<?phpsession_start();//require_once("config/config.inc.php");//require_once("includes/Database.php");require_once("load.php");//require_once("includes/load_hours.php");//require_once("includes/load_settings.php");// Authentication$allowed_roles = array("public");require_once("includes/verify_access.php");if(isset($_GET['login']) && !isset($_SESSION['LibRooms']['UserID']))	restrict_access($db,array("patron"));else	restrict_access($db,array("public","patron"));$selected_date = date('Y-m-d');	$possible_amenities = array();if(isset($_GET['amenities']))	$selected_amenities = $_GET['amenities'];$room_filter = array();$room_filter['out_of_order'] = "No";if(isset($_GET['capacity_filter']) && strcmp($_GET['capacity_filter'],''))	$room_filter['capacity'] = $_GET['capacity_filter'];$room_filter['amenities and'] = $_GET['amenity_filter'];$room_filter['group_by'] = "room_group_id";// load hours for each day of reservation windowfor($i=0;$i<MAX_FUTURE_RES_DAYS;$i++){	$date = date("Y-m-d",strtotime("+".$i." days",strtotime($selected_date)));	$available_hours[$date] = load_hours($db,$date);}// load rooms$all_rooms = load_rooms(null,$room_filter);$all_room_groups = load_room_groups();// load reservations$all_reservations = load_calendar_reservations();require_once("includes/header.php");?><script type="text/javascript">jQuery(document).ready(function($) {	//alert('Handler for .ready() called. '+$('#selected_date').val());	$('#selected_date').change(function() {				//alert('Handler for .change() called. '+$('#selected_date').val());				// get available start time options for date		$.getJSON('api/available_start_slots_for_date.php?date='+$('#selected_date').val(), function(data) {			if(data.error)			{			}			else			{				$('#start_time_select').empty();								var items = [];				$('#start_time_select').append($("<option></option>").attr("value",'').text("Select Start Time..."));				$.each(data.times, function(key, value) {					//alert("key: " + key + " val: " + val);					key = data.available_slots[key];					$('#start_time_select').append($("<option></option>").attr("value",key).text(value));				});			}		});	});		$('#start_time_select').change(function() {		$.getJSON('api/available_end_slots_for_date.php?date='+$('#selected_date').val()+"&start_time="+$('#start_time_select').val(), function(data) {			if(data.error)			{			}			else			{				$('#end_time_select').empty();								var items = [];				$('#end_time_select').append($("<option></option>").attr("value",'').text("Select End Time..."));				$.each(data.times, function(key, value) {					//alert("key: " + key + " val: " + val);					key = data.available_slots[key];					$('#end_time_select').append($("<option></option>").attr("value",key).text(value));				});			}		});	});		$('#end_time_select').change(function() {	});	});</script><div id='PageTitle'>Reserve a Study Room</div><div class='breadcrumb'><a href='http://library.pdx.edu'>Home</a> &raquo; Reserve a Study Room</div><table width='100%'><tr valign='top'>	<td width='650' style='font-size:14px;'>	<br><?php		if(isset($_GET['selected_date']) && isset($_GET['start_time']) && isset($_GET['end_time']))	{		// try to find available matching rooms		$selected_date = $_GET['selected_date'];		$start_time = $_GET['start_time'];		$end_time = $_GET['end_time'];		$minimum_capacity = $_GET['minimum_capacity'];				// pr($all_rooms);		$matching_reservations = array();				// for each matching room (capacity and amenity filtered), check each room for exact availability		foreach($all_rooms as $room_group_id => $room_groups)		{			foreach($room_groups as $room_id => $room)			{				// confirm the room meets the minimum capacity requirement				if($room->capacity < $minimum_capacity)					continue;								if(isset($_GET['amenity_filer']))				{					foreach($_GET['amenity_filter'] as $filter_amenity)					{						$found_amenity = false;						foreach($room->amenities as $room_amenity)						{							if(!strcmp($room_amenity->amenity_id,$filter_amenity))							{								$found_amenity = true;								break;							}						}						if($found_amenity == false)						{							continue;						}					}				}								//print("room id: $room_id<br>\n");				for($room_section_id=1;$room_section_id<=$room->max_simultaneous_reservations;$room_section_id++)				{					//print("room section: $room_section_id<br>\n");					$conflicts = get_time_conflicts($room_id,$room_section_id,$user_id,$selected_date,$start_time,$end_time,0,$reschedule_reservation_id);					//pr($conflicts);					if(count($conflicts) == 0)					{						$matching_reservations[] ="<a href='confirm_reservation.php?selected_date=$selected_date&room_id=".$room->id."_".$room_section_id."&start_time=".date("YmdHis",strtotime($start_time))."&end_time=".date("YmdHis",strtotime($end_time))."'>Room $room->room_number, $room->capacity chairs, ".date("m/d/Y",strtotime($selected_date)).", ".date("g:ia",strtotime($start_time))." to ".date("g:ia",strtotime($end_time))."</a>";						}				}			}		}				if(count($matching_reservations) > 0)		{			print("<h2>Available Rooms Matching Your Search Criteria</h2>\n");			foreach($matching_reservations as $matching_reservation)			{				print($matching_reservation."<br>\n");			}		}		else		{			print("<h2>Sorry, no rooms are available for the criteria you selected.</h2>\n");		}		print("<hr>\n");	}?>			<br>		<?php					print("<form action=''>\n");			print("<h2>Search for a Study Room</h2>\n");						// print dropdown of dates within reservation window			print("<label for='selected_date'>Select Date for Reservation</label>\n");			print("<select id='selected_date' name='selected_date' label='Reservation Date'><option value=''>Select Date...</option>\n");			foreach($available_hours as $date => $day_hours)			{				if(count($day_hours) > 0)				{					if(!strcmp($_GET['selected_date'],$date))						print("<option value='$date' selected>".date("m/d/Y",strtotime($date))."</option>\n");					else						print("<option value='$date'>".date("m/d/Y",strtotime($date))."</option>\n");				}			}			print("</select>\n");			print("<br>\n");			print("<div id='start_time_div'>\n");			print("<label for='start_time_select'>Select Start Time for Reservation</label>\n");			print("<select id='start_time_select' name='start_time'>\n");			if(isset($_GET['selected_date']))			{				print("<option value=''>Select Start Time...</option>\n");				$start_times = json_decode(file_get_contents("http://".$_SERVER['HTTP_HOST'].WEB_ROOT."api/available_start_slots_for_date.php?date=$selected_date"));				foreach($start_times->available_slots as $index => $slot)				{					if(!strcmp($start_time,$slot))						print("<option value='$slot' selected>".date("g:ia",strtotime($slot))."</option>\n");											else						print("<option value='$slot'>".date("g:ia",strtotime($slot))."</option>\n");				}			}			print("</select>\n");			print("</div>\n");			print("<div id='end_time_div'>\n");			print("<label for='end_time_select'>Select End Time for Reservation</label>\n");			print("<select id='end_time_select' name='end_time'>\n");			if(isset($_GET['selected_date']) && isset($_GET['start_time']))			{				print("<option value=''>Select End Time...</option>\n");				$end_times = json_decode(file_get_contents("http://".$_SERVER['HTTP_HOST'].WEB_ROOT."api/available_end_slots_for_date.php?date=$selected_date&start_time=".urlencode($_GET['start_time'])));				foreach($end_times->available_slots as $index => $slot)				{					if(!strcmp($end_time,$slot))						print("<option value='$slot' selected>".date("g:ia",strtotime($slot))."</option>\n");											else						print("<option value='$slot'>".date("g:ia",strtotime($slot))."</option>\n");				}			}			print("</select>\n");			print("</div>\n");			print("<div id='minimum_capacity_div'>\n");			print("<label for='minimum_capacity_select'>Select Minimum Room Capacity</label>\n");			print("<select id='minimum_capacity_select' name='minimum_capacity'>\n");			$capacity_options = load_room_capacity_options();			foreach($capacity_options as $capacity_option)			{				if(!strcmp($minimum_capacity,$capacity_option))					print("<option value='$capacity_option' selected>$capacity_option chairs</option>\n");				else					print("<option value='$capacity_option'>$capacity_option chairs</option>\n");			}			print("</select>\n");			print("</div>\n");									// show amenities tagged as search filters			$amenities = load_amenities(array('search_filter'=>'Yes'));			if(count($amenities) > 0)			{				print("Only show rooms with the following amenities (Optional)<br>\n");								foreach($amenities as $amenity_id => $amenity)				{					$checked = "";					if(isset($_GET['amenity_filter']) && is_array($_GET['amenity_filter']))					{						if(in_array($amenity->id,$_GET['amenity_filter']))							$checked = "checked";					}					print("<label for='amenity_id_$amenity->id'>$amenity->name</label>\n");					print("<input id='amenity_id_$amenity->id' type='checkbox' name='amenity_filter[]' value='$amenity->id' label='$amenity->name' $checked><br>");				}			}			print("<br>\n");									print("<input id='find_a_room' type='submit' value='Find a Room'>\n");			print("</form>\n");						//exit();													?>	</td>	<td style='font-size:14px' align='center'>		<br>		<?php			require_once("includes/available_credits_widget.php");		?>		</td></tr></table><?phpif(isset($_GET['reschedule'])){	$reservations = load_reservations(array('id'=>$_GET['reschedule']));	foreach($reservations as $orig_reservation)		break;		if(strcmp($orig_reservation->status,'Scheduled'))	{		display_error("This reservation cannot be rescheduled. Current status: $orig_reservation->status");		require_once("includes/footer.php");		exit();	}		if(strcmp($user_type,'staff') && strcmp($user_type,'admin') && strcmp($orig_reservation->user_id,$_SESSION['LibRooms']['UserID']))	{		// user does not have permission to reschedule this reservation		display_error("You do not have permission to change this reservation.",array("user_id"=>$_SESSION['LibRooms']['UserID'],"reservation"=>$orig_reservation));		require_once("includes/footer.php");		exit();	}	else	{		// display info about reservation rescheduling from		//$orig_room = $all_rooms[$orig_reservation->room_id];		//print("<div id='reschedule_note' align='center'>Rescheduling Reservation: Room $orig_room->room_number - ".date("m/d/Y",strtotime($orig_reservation->date))." (".date("g:ia",strtotime($orig_reservation->sched_start_time))." - ".date("g:ia",strtotime($orig_reservation->sched_end_time)).")</div>\n");	}}print("We would love to have your feedback about regarding our screen reader friendly study rooms reservation tool.\n");print("<a href='http://library.pdx.edu/web_forms/suggestions.php'>You can send us a comment or suggestion.</a><br>\n");print("If you would like assistance with making a reservation for a study room, please call the Portland State Library Circulation department at 503-725-4424 or email us at <a href='mailto:circ@lists.pdx.edu'>circ@lists.pdx.edu</a><br>\n");require_once("includes/footer.php");				?>